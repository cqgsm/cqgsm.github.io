<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[多层json对象嵌套的扁平化与去扁平化]]></title>
      <url>http://cqblog.info/2016/06/29/javascript/</url>
      <content type="html"><![CDATA[<p>多重json嵌套,解决方案<br><a id="more"></a><br>今天遇到一个问题，多重json嵌套，要扁平化，弱鸡挣扎了下，找了个解决方案<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">//扁平化</div><div class="line">    JSON.flatten = <span class="keyword">function</span>(data) &#123;</div><div class="line">        var result = &#123;&#125;;</div><div class="line">        <span class="keyword">function</span> recurse(cur, prop) &#123;</div><div class="line">            <span class="keyword">if</span> (Object(cur) !== cur) &#123;</div><div class="line">                result[prop] = cur;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Array.isArray(cur)) &#123;</div><div class="line">                <span class="keyword">for</span> (var i = 0, l = cur.length; i &lt; l; i++)</div><div class="line">                    recurse(cur[i], prop + <span class="string">"["</span> + i + <span class="string">"]"</span>);</div><div class="line">                <span class="keyword">if</span> (l == 0)</div><div class="line">                    result[prop] = [];</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                var isEmpty = <span class="literal">true</span>;</div><div class="line">                <span class="keyword">for</span> (var p <span class="keyword">in</span> cur) &#123;</div><div class="line">                    isEmpty = <span class="literal">false</span>;</div><div class="line">                    recurse(cur[p], prop ? prop + <span class="string">"."</span> + p : p);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (isEmpty &amp;&amp; prop)</div><div class="line">                    result[prop] = &#123;&#125;;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        recurse(data, <span class="string">""</span>);</div><div class="line">        <span class="built_in">return</span> result;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    //去扁平化</div><div class="line">    JSON.unflatten = <span class="keyword">function</span>(data) &#123;</div><div class="line">        <span class="string">"use strict"</span>;</div><div class="line">        <span class="keyword">if</span> (Object(data) !== data || Array.isArray(data))</div><div class="line">            <span class="built_in">return</span> data;</div><div class="line">        var regex = /\.?([^.\[\]]+)|\[(\d+)\]/g,</div><div class="line">            resultholder = &#123;&#125;;</div><div class="line">        <span class="keyword">for</span> (var p <span class="keyword">in</span> data) &#123;</div><div class="line">            var cur = resultholder,</div><div class="line">                prop = <span class="string">""</span>,</div><div class="line">                m;</div><div class="line">            <span class="keyword">while</span> (m = regex.exec(p)) &#123;</div><div class="line">                cur = cur[prop] || (cur[prop] = (m[2] ? [] : &#123;&#125;));</div><div class="line">                prop = m[2] || m[1];</div><div class="line">            &#125;</div><div class="line">            cur[prop] = data[p];</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> resultholder[<span class="string">""</span>] || resultholder;</div><div class="line">    &#125;;</div></pre></td></tr></table></figure></p>
<p>测试用例：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var xml = &#123;</div><div class="line">        ToUserName: [<span class="string">'阿斯顿'</span>],</div><div class="line">        FromUserName: [<span class="string">'啊实打实的'</span>],</div><div class="line">        CreateTime: [<span class="string">'hhhh123123123'</span>, &#123;<span class="string">"x"</span>: <span class="string">"aaa"</span>&#125;,[1, 2, 3, 4]],</div><div class="line">        MsgType: [<span class="string">'event'</span>],</div><div class="line">        Event: [<span class="string">'sdf '</span>],</div><div class="line">        EventKey: [<span class="string">''</span>],</div><div class="line">        xx: <span class="string">'xx'</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>扁平化结果：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    CreateTime[0]: <span class="string">"hhhh123123123"</span>,</div><div class="line">    CreateTime[1].x: <span class="string">"aaa"</span>,</div><div class="line">    CreateTime[2][0]: 1,</div><div class="line">    CreateTime[2][1]: 2,</div><div class="line">    CreateTime[2][2]: 3,</div><div class="line">    CreateTime[2][3]: 4,</div><div class="line">    EventKey[0]: <span class="string">""</span>,</div><div class="line">    Event[0]: <span class="string">"sdf "</span>,</div><div class="line">    FromUserName[0]: <span class="string">"啊实打实的"</span>,</div><div class="line">    MsgType[0]: <span class="string">"event"</span>,</div><div class="line">    ToUserName[0]: <span class="string">"阿斯顿"</span>,</div><div class="line">    xx: <span class="string">"xx"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>正好能满足需求<br>使用   <strong>JSON.flatten</strong> 能还原去扁平化的值，不做演示。</p>
]]></content>
    </entry>
    
  
  
</search>
